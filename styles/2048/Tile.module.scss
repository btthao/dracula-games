@use "sass:math";
.tile {
  font-weight: 600;
  position: absolute;
  display: grid;
  place-items: center;
  font-size: 2em;
  @include m.tile-color(v.$primary-color);
}

.new {
  transform: scale(0);
  animation: pop 100ms forwards ease-in;
  animation-delay: 400ms;
}

.merged {
  transform: scale(0);
  animation: merge 300ms forwards ease-out;
  animation-delay: var(--animation-delay);
}

.move {
  animation: move forwards ease-in;
  animation-duration: var(--duration);
}

 $tile-colors:  #adcfe1, #609dbe, #1a7f9b, #72d4c5,  #19bdad, #0dd196,#f6dc91, #f6bb46, #faa784, #dd94d1, #E94C89;

@for $i from 1 through length($tile-colors) {
  $color: nth($tile-colors, $i);
  $value: math.pow(2, $i);
  .tile[data-value="#{$value}"] {
    @include m.tile-color($color);
    @if $value > 1000 {
        font-size: 2.2em;
    } @else {
        font-size: 2.4em;
    }
  }
}

@keyframes pop {
  from {
    transform: scale(0.7);
  }
  to {
    transform: scale(1);
  }
}

@keyframes merge {
  0% {
    transform: scale(0.6);
  }
  30% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes move {
  from {
    transform: translate(0, 0);
  }
  to {
    transform: translate(var(--move-x), var(--move-y));
  }
}
